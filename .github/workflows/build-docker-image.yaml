name: Create/Release Docker Image
on:
  workflow_dispatch:
  push:
    branches: [ "main", "feature/" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platforms:
          - linux/amd64
          - linux/arm64
          - linux/arm/v7
          - linux/arm/v6
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: wisdom-oss/actions/docker-build@main
        name: 
        with:
          registry-password: ${{ secrets.GITHUB_TOKEN }}
          cache-key: ${{ runner.os }}-cache-${{ hashFiles('**/go.sum') }}
          cache-path: go-mod-build
          cache-map: |
            {
              "go-mod-build": "/root/.cache/go-build"
            }

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@sha256:%s ' *)   
      
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }} 
      