name: code-quality
on:
  pull_request:
  push:
  schedule:
    - cron: '15 12 * * 5'

permissions:
  contents: read
  pull-requests: read
  checks: write

jobs:
  tests:
    runs-on: ubuntu-latest
    if: github.event_name != 'schedule'
    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: stable
      - run: go install github.com/jstemmer/go-junit-report/v2@latest
      - env:
          PGUSER: postgres
          PGPASSWORD: postgres
          PGHOST: localhost
          PGSSLMODE: disable
        run: go test -v ./... | go-junit-report -set-exit-code -subtest-mode exclude-parents -out report.xml
      - uses: test-summary/action@v2
        if: always()
        with:
          paths: report.xml

  code-ql:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      packages: read
      actions: read

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: stable
      - uses: github/codeql-action/init@v3
        with:
          languages: go
          build-mode: autobuild
          queries: security-and-quality
      - uses: github/codeql-action/analyze@v3
        with:
          category: "/language:go"

  lint:
    runs-on: ubuntu-latest
    if: github.event_name != 'schedule'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: stable
      - uses: golangci/golangci-lint-action@v6
        with:
          version: v1.62
          only-new-issues: ${{ github.event_name == 'pull_request'}}
